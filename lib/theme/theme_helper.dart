import 'package:flutter/material.dart';
import '../../core/app_export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: appTheme.yellow900,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(
              23,
            ),
          ),
          shadowColor: appTheme.yellow900.withOpacity(0.22),
          elevation: 4,
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: colorScheme.onPrimary,
          shape: RoundedRectangleBorder(
            side: BorderSide(
              color: colorScheme.onPrimaryContainer.withOpacity(1),
              width: 1,
            ),
            borderRadius: BorderRadius.circular(
              9,
            ),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 2,
        space: 2,
        color: colorScheme.primaryContainer,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodySmall: TextStyle(
          color: appTheme.gray600,
          fontSize: getFontSize(
            12,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        labelLarge: TextStyle(
          color: colorScheme.primaryContainer,
          fontSize: getFontSize(
            13,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
        labelMedium: TextStyle(
          color: appTheme.yellow900,
          fontSize: getFontSize(
            10,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
        labelSmall: TextStyle(
          color: appTheme.lime700,
          fontSize: getFontSize(
            8,
          ),
          fontFamily: 'Montserrat',
          fontWeight: FontWeight.w600,
        ),
        titleMedium: TextStyle(
          color: appTheme.yellow900,
          fontSize: getFontSize(
            18,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
        titleSmall: TextStyle(
          color: appTheme.yellow900,
          fontSize: getFontSize(
            14,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFFD9D9D9),
    primaryContainer: Color(0XFF563E1F),
    secondary: Color(0XFF563E1F),
    secondaryContainer: Color(0XFFD9D9D9),
    tertiary: Color(0XFF563E1F),
    tertiaryContainer: Color(0XFFD9D9D9),

    // Background colors
    background: Color(0XFF563E1F),

    // Surface colors
    surface: Color(0XFF563E1F),
    surfaceTint: Color(0XAA313131),
    surfaceVariant: Color(0XFFD9D9D9),

    // Error colors
    error: Color(0XAA313131),
    errorContainer: Color(0XFFFAA326),
    onError: Color(0X99FFFFFF),
    onErrorContainer: Color(0XAA313131),

    // On colors(text colors)
    onBackground: Color(0X99FFFFFF),
    onInverseSurface: Color(0X99FFFFFF),
    onPrimary: Color(0XAA313131),
    onPrimaryContainer: Color(0X99FFFFFF),
    onSecondary: Color(0X99FFFFFF),
    onSecondaryContainer: Color(0XAA313131),
    onTertiary: Color(0X99FFFFFF),
    onTertiaryContainer: Color(0XAA313131),

    // Other colors
    outline: Color(0XAA313131),
    outlineVariant: Color(0XFF563E1F),
    scrim: Color(0XFF563E1F),
    shadow: Color(0XAA313131),

    // Inverse colors
    inversePrimary: Color(0XFF563E1F),
    inverseSurface: Color(0XAA313131),

    // Pending colors
    onSurface: Color(0X99FFFFFF),
    onSurfaceVariant: Color(0XAA313131),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF000000);

  // BlueGray
  Color get blueGray400 => Color(0XFF888888);

  // Gray
  Color get gray100 => Color(0XFFF3F3F3);
  Color get gray10001 => Color(0XFFF4F4F4);
  Color get gray10002 => Color(0XFFF8F9F4);
  Color get gray200 => Color(0XFFEDEDED);
  Color get gray400 => Color(0XFFC4C4C4);
  Color get gray50 => Color(0XFFFFFBF6);
  Color get gray500 => Color(0XFFA5A4A4);
  Color get gray50001 => Color(0XFF999999);
  Color get gray600 => Color(0XFF7C7C7C);
  Color get gray60001 => Color(0XFF848484);
  Color get gray700 => Color(0XFF695438);
  Color get gray800 => Color(0XFF563F1F);
  Color get gray80001 => Color(0XFF695437);

  // Lime
  Color get lime700 => Color(0XFFCE9041);

  // Orange
  Color get orangeA100 => Color(0XFFFFD08D);

  // Teal
  Color get teal500 => Color(0XFF18967D);

  // Yellow
  Color get yellow900 => Color(0XFFE26B26);
  Color get yellow90001 => Color(0XFFE36E26);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
